c
warden.authenticate(:user)
session[ "warden.user.user.key"] =nil
session[ "warden.user.user.key"]
warden.authenticate(:user)
session[ "warden.user.user.key"] = []
session[ "warden.user.user.key"]
session
sessions
warden.authenticate(:user)
c
warden.authenticate(:user)
warden
c
request.headers['Authorization']
request.headers['Authorization']]
request.headers
request.header
request
params
c
User.find(jwt_payload['sub'])
jwt_payload
n
request.headers['Authorization']
request.headers
headers['Authorization']
request.headers['Authorization'].present?
Authorization
c
n
task
n
c
Task.find(params[:task_id])
Task.find(params[:id])
params
user
c
@task
n
@task.update(task_params)
parameter
params
c
@task.update(status: params[:status])
params
c
n
task
c
n
nn
n
nn
n
params
perm
c
next
params
c
next
params
c
next
params
c
params
next
c
next
resource.persisted?
params
